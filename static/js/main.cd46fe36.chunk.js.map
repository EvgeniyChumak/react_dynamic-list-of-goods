{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","json","catch","error","App","useState","setGoods","className","type","onClick","goodsAPI","sort","firstGood","secondGood","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"iNAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,YCNX,SAASC,IACd,OAAOC,MAHO,yEAIXC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,sBAGlB,OAAOF,EAASG,UAEjBC,OAAM,SAAAC,GACL,MAAMA,KAIL,ICbMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjB,EAAP,KAAckB,EAAd,KAcA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBAAQC,KAAK,SAAS,UAAQ,aAAaC,QAhB7B,WAChBC,IAAkBb,KAAKS,IAerB,4BAIA,wBACEE,KAAK,SACL,UAAQ,oBACRC,QAnBkB,WDOjBd,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMuB,MAAK,SAACC,EAAWC,GAAZ,OACxBD,EAAUnB,KAAKqB,cAAcD,EAAWpB,SAEvCsB,MAAM,EAAG,MCVSlB,KAAKS,IAexB,gCAQA,wBAAQE,KAAK,SAAS,UAAQ,aAAaC,QApBxB,WDWhBd,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,SAAA1B,GAAI,MAAmB,QAAfA,EAAKE,YACxCU,OAAM,SAAAC,GACL,MAAMA,KCbeN,KAAKS,IAmB1B,4BAIA,cAACrB,EAAD,CAAWG,MAAOA,QCtCxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.cd46fe36.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Cannot fetch goods');\n      }\n\n      return response.json();\n    })\n    .catch(error => {\n      throw error;\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((firstGood, secondGood) => (\n      firstGood.name.localeCompare(secondGood.name)\n    ))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n    .catch(error => {\n      throw error;\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const onLoadAll = () => {\n    goodsAPI.getAll().then(setGoods);\n  };\n\n  const onLoadFirstFive = () => {\n    goodsAPI.get5First().then(setGoods);\n  };\n\n  const onLoadRedGoods = () => {\n    goodsAPI.getRedGoods().then(setGoods);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button type=\"button\" data-cy=\"all-button\" onClick={onLoadAll}>\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={onLoadFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button type=\"button\" data-cy=\"red-button\" onClick={onLoadRedGoods}>\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}